{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas\n",
    "import csv\n",
    "from pathlib import Path"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "csvpath = Path(\"budget_data.csv\")\n",
    "data_csv = pandas.read_csv(csvpath)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "totalMonths = 0\n",
    "totalRevenue = 0\n",
    "revenue = []\n",
    "previousRevenue = 0\n",
    "monthOfChange = []\n",
    "revenueChange = 0\n",
    "greatestDecrease = [\"\", 9999999]\n",
    "greatestIncrease = [\"\", 0]\n",
    "revenueChangeList = []\n",
    "averageRevenue = 0\n",
    "textFile=\"output.txt\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('budget_data.csv') as csvfile:  \n",
    "    csvreader = csv.DictReader(csvfile)\n",
    "    for row in csvreader:\n",
    "        totalMonths += 1\n",
    "        totalRevenue = totalRevenue + int(row[\"Profit/Losses\"])\n",
    "        revenueChange = float(row[\"Profit/Losses\"])- previousRevenue\n",
    "        previousRevenue = float(row[\"Profit/Losses\"])\n",
    "        revenueChangeList = revenueChangeList + [revenueChange]\n",
    "        monthOfChange = [monthOfChange] + [row[\"Date\"]]\n",
    "        if revenueChange>greatestIncrease[1]:\n",
    "            greatestIncrease[1]= revenueChange\n",
    "            greatestIncrease[0] = row['Date']\n",
    "        if revenueChange<greatestDecrease[1]:\n",
    "            greatestDecrease[1]= revenueChange\n",
    "            greatestDecrease[0] = row['Date']\n",
    "    averageRevenue = sum(revenueChangeList)/len(revenueChangeList)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Finanacial Analysis\n",
      "---------------------------\n",
      "Total Months: 86\n",
      "Total Revenue: 38382578\n",
      "Average Revenue Change: 7803.476744186047\n",
      "Greatest Increase in Revenue: ('Feb-2012', 1926159.0)\n",
      "Greatest Decrease in Revenue: ('Sep-2013', -2196167.0)\n"
     ]
    }
   ],
   "source": [
    "print('Finanacial Analysis')\n",
    "print('---------------------------')\n",
    "print(f'Total Months: '+ str(totalMonths))\n",
    "print(f'Total Revenue: ' +str(totalRevenue))\n",
    "print(f'Average Revenue Change: '+ str(averageRevenue))\n",
    "print(f'Greatest Increase in Revenue: '+ str((greatestIncrease[0], greatestIncrease[1])))\n",
    "print(f'Greatest Decrease in Revenue: '+ str((greatestDecrease[0], greatestDecrease[1])))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "with open(textFile, 'w') as file:\n",
    "    file.write(\"Financial Analysis\\n\")\n",
    "    file.write(\"-------------------------\\n\")\n",
    "    file.write(\"Total Months: %d\\n\" % totalMonths)\n",
    "    file.write(\"Total Revenue: $%d\\n\" % totalRevenue)\n",
    "    file.write(\"Average Revenue Change $%d\\n\" % averageRevenue)\n",
    "    file.write(\"Greatest Increase in Revenue: %s ($%s)\\n\" % (greatestIncrease[0], greatestIncrease[1]))\n",
    "    file.write(\"Greatest Decrease in Revenue: %s ($%s)\\n\" % (greatestDecrease[0], greatestDecrease[1]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
